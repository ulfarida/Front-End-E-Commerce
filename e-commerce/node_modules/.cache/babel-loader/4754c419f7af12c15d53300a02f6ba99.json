{"ast":null,"code":"var _jsxFileName = \"/home/alta7/Documents/Alterra Academy/E-commerce/Front-End-E-Commerce/e-commerce/src/pages/home.jsx\";\nimport React from 'react';\nimport Header from '../components/header';\nimport Promo from '../components/promo';\nimport Kategori from '../components/kategori';\nimport { withRouter } from \"react-router-dom\";\nimport best from \"../images/best.svg\";\nimport all from \"../images/all.svg\";\nimport milk from \"../images/milk.svg\";\nimport spoon from \"../images/spoon.svg\";\nimport bath from \"../images/bath.svg\";\nimport clothes from \"../images/clothes.svg\";\nimport diaper from \"../images/diaper.svg\";\nimport toys from \"../images/toys.svg\";\nimport { actions, store } from '../store/store';\n\nclass Home extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      kategori: [{\n        kategori: 'Semua Produk',\n        path: 'produk',\n        image: all\n      }, {\n        kategori: 'Best Seller',\n        path: 'produk',\n        image: best\n      }, {\n        kategori: 'Makanan dan Susu',\n        path: 'makanan-susu',\n        image: milk\n      }, {\n        kategori: 'Alat Makan',\n        path: 'alat-makan',\n        image: spoon\n      }, {\n        kategori: 'Perlengkapan mandi',\n        path: 'perlengkapan-mandi',\n        image: bath\n      }, {\n        kategori: 'Mainan',\n        path: 'mainan',\n        image: toys\n      }, {\n        kategori: 'Pakaian',\n        path: 'pakaian',\n        image: clothes\n      }, {\n        kategori: 'Popok',\n        path: 'popok',\n        image: diaper\n      }]\n    };\n\n    this.getCategory = () => {\n      const self = this;\n      store.setState({\n        kategori: self.props.kategori1\n      });\n      self.props.history.push('/' + self.props.path);\n    };\n  }\n\n  render() {\n    const kategoriList = this.state.kategori.map(value => {\n      return React.createElement(Kategori, {\n        kategori1: value.kategori,\n        path: value.path,\n        image: value.image,\n        getCategory: () => this.getCategory(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      });\n    });\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(Promo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      class: \"script\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Kategori\"))), React.createElement(\"div\", {\n      className: \"row search-result\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, kategoriList));\n  }\n\n}\n\nexport default connect('', actions)(withRouter(Home));","map":{"version":3,"sources":["/home/alta7/Documents/Alterra Academy/E-commerce/Front-End-E-Commerce/e-commerce/src/pages/home.jsx"],"names":["React","Header","Promo","Kategori","withRouter","actions","store","Home","Component","state","kategori","path","image","all","best","milk","spoon","bath","toys","clothes","diaper","getCategory","self","setState","props","kategori1","history","push","render","kategoriList","map","value","connect"],"mappings":"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","sourcesContent":["import React from 'react'; \nimport Header from '../components/header';\nimport Promo from '../components/promo';\nimport Kategori from '../components/kategori';\nimport { withRouter } from \"react-router-dom\";\nimport best from '../images/best.svg'\nimport all from '../images/all.svg'\nimport milk from '../images/milk.svg'\nimport spoon from '../images/spoon.svg'\nimport bath from '../images/bath.svg'\nimport clothes from '../images/clothes.svg'\nimport diaper from '../images/diaper.svg'\nimport toys from '../images/toys.svg'\nimport { actions, store } from '../store/store';\nclass Home extends React.Component {\n\n    state = {\n        kategori : [{kategori : 'Semua Produk', path: 'produk', image: all}, {kategori : 'Best Seller', path: 'produk', image: best}, {kategori : 'Makanan dan Susu', path: 'makanan-susu', image: milk}, {kategori : 'Alat Makan', path: 'alat-makan', image: spoon}, {kategori : 'Perlengkapan mandi', path: 'perlengkapan-mandi', image: bath}, {kategori : 'Mainan', path: 'mainan', image: toys},{kategori : 'Pakaian', path: 'pakaian', image: clothes}, {kategori : 'Popok', path: 'popok', image: diaper}]\n    }\n\n\n    getCategory = () => {\n\t\tconst self = this;\n\t\tstore.setState({ kategori: self.props.kategori1 });\n\t\tself.props.history.push('/' + self.props.path);\n\t};\n\n\n    render () {\n\n        const kategoriList = this.state.kategori.map ((value) => {\n            return <Kategori kategori1={value.kategori} path={value.path} image={value.image} getCategory={() => this.getCategory()}/>\n        })\n    \n        return (\n            <React.Fragment>\n                <Header/>\n                <Promo />\n                <div className=\"container mt-3\">\n                    <p class=\"script\"><span>Kategori</span></p>\n                </div>\n                <div className=\"row search-result\">\n                    {kategoriList}\n                </div>\n            </React.Fragment>\n\n        )\n    }\n}\nexport default connect('', actions)(withRouter(Home));\n"]},"metadata":{},"sourceType":"module"}