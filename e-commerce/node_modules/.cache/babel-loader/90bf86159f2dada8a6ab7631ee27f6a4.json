{"ast":null,"code":"var _jsxFileName = \"/home/alta7/Documents/Alterra Academy/E-commerce/Front-End-E-Commerce/e-commerce/src/pages/kategoriProduk.jsx\";\nimport React from 'react';\nimport Header from '../components/header';\nimport Filter from '../components/filterProduk';\nimport Produk from '../components/produk';\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"unistore/react\";\nimport { actions, store } from \"../store/store\";\nimport axios from \"axios\";\n\nclass KategoriProduk extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = async () => {\n      const self = this;\n      const kategori = await self.props.match.params.kategori;\n\n      if (self.props.kategori !== kategori) {\n        await self.hitCategory();\n      }\n    };\n\n    this.changeCategory = async kat => {\n      // const self = this\n      const kategori = await this.props.match.params.kategori;\n\n      if (this.props.kategori !== kategori) {\n        await this.hitCategory();\n      }\n    };\n\n    this.hitCategory = async () => {\n      // const self = this\n      let produk = {\n        method: \"get\",\n        url: \"http://0.0.0.0:5000/produk\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      await axios(produk).then(async response => {\n        const produks = response.data.filter(item => {\n          if (item.kategori === this.props.kategori) {\n            return item;\n          }\n\n          return false;\n        });\n        await store.setState({\n          produkList: produks\n        });\n      }).catch(error => {\n        alert(\"error\");\n      });\n    };\n  }\n\n  render() {\n    let itemProduk;\n\n    if (this.props.produkList !== undefined && this.props.produkList !== null) {\n      const listProduk = this.props.produkList;\n      itemProduk = listProduk.map((item, key) => {\n        return React.createElement(Produk, Object.assign({\n          key: key,\n          number: key,\n          nama_produk: item.nama_produk,\n          foto_produk: item.foto_produk,\n          harga: item.harga,\n          stok: item.stok,\n          deskripsi: item.deskripsi,\n          lokasi: item.lokasi\n        }, this.props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }));\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Filter, {\n      changeCategory: () => this.changeCategory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-md-9 mr-0 ml-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row search-result mt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, itemProduk)))));\n  }\n\n}\n\nexport default connect('kategori, produkList', actions)(withRouter(KategoriProduk));","map":{"version":3,"sources":["/home/alta7/Documents/Alterra Academy/E-commerce/Front-End-E-Commerce/e-commerce/src/pages/kategoriProduk.jsx"],"names":["React","Header","Filter","Produk","withRouter","connect","actions","store","axios","KategoriProduk","Component","componentDidMount","self","kategori","props","match","params","hitCategory","changeCategory","kat","produk","method","url","headers","then","response","produks","data","filter","item","setState","produkList","catch","error","alert","render","itemProduk","undefined","listProduk","map","key","nama_produk","foto_produk","harga","stok","deskripsi","lokasi"],"mappings":"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","sourcesContent":["import React from 'react'; \nimport Header from '../components/header';\nimport Filter from '../components/filterProduk';\nimport Produk from '../components/produk';\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"unistore/react\";\nimport { actions, store } from \"../store/store\";\nimport axios from \"axios\"\n\nclass KategoriProduk extends React.Component {\n\n    componentDidMount = async () => { \n        const self = this\n        const kategori = await self.props.match.params.kategori\n        if(self.props.kategori!==kategori){\n            await self.hitCategory();\n        }\n    }\n\n    changeCategory = async (kat) =>{\n        // const self = this\n        const kategori = await this.props.match.params.kategori\n        if(this.props.kategori!==kategori){\n            await this.hitCategory();\n        }\n    }\n\n    hitCategory = async () => {\n        // const self = this\n        let produk = {\n            method:\"get\",\n            url: \"http://0.0.0.0:5000/produk\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        };\n\n        await axios(produk)\n            .then(async (response) => {\n                const produks = response.data.filter(item => {\n                    if (item.kategori === this.props.kategori) {\n                        return item;\n                    }\n                    return false;\n                    })\n                await store.setState({ produkList : produks})\n            })\n            .catch((error) => {\n                alert(\"error\");\n            });\n    }\n\n\n    render () {\n\n        let itemProduk;\n        if(this.props.produkList!==undefined && this.props.produkList!==null) {\n            const listProduk = this.props.produkList\n            itemProduk = listProduk.map((item, key) => {\n                return (\n                    <Produk \n                        key={key} \n                        number = {key}\n                        nama_produk={item.nama_produk} \n                        foto_produk={item.foto_produk} \n                        harga={item.harga}\n                        stok={item.stok}\n                        deskripsi={item.deskripsi}\n                        lokasi={item.lokasi} \n                        {...this.props}\n                        />\n                );\n            });\n        }\n        return (\n            <div>\n                <Header/>\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-md-3\">\n                            <Filter changeCategory={()=>this.changeCategory}/>\n                        </div>\n                        <div className=\"col-md-9 mr-0 ml-0\">\n                            <div className=\"row search-result mt-5\">\n                                {itemProduk}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \n            </div>\n\n        )\n    }\n}\nexport default connect('kategori, produkList', actions)(withRouter(KategoriProduk));\n"]},"metadata":{},"sourceType":"module"}